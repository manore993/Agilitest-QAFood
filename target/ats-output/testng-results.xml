<?xml version="1.0" encoding="UTF-8"?>
<testng-results ignored="0" total="2" passed="1" failed="1" skipped="0">
  <reporter-output>
    <line>
      <![CDATA[- Subscript -> {"called":"subscripts.TesterAjouterMultipleArticleAvecMultipleToppingsSubscript","iteration":"1/2","type":"dataFile","url":"C:\\Users\\AishwaryaMANORE\\Documents\\AgilitestProjects\\QAFOOD\\target\\classes\\assets\\data\\data_construction_de_commande\\TesterAjouterMultipleArticleAvecMultipleToppings.csv","parameters":[{"FoodItem":"12 wings"},{"Topping1":"Ketchup"},{"Topping2":"Sauce douce"},{"Topping3":"Sauce piquante"}],"name":"construction_de_commande.TesterAjouterMultipleArticleAvecMultipleToppings","line":0}]]>
    </line>
    <line>
      <![CDATA[- Subscript -> {"condition":{"variable":{"iter":"1"},"compare":{"operator":"==","value":"1"},"continue":true},"called":"subscripts.ParametreDeCommande","iteration":"1/1","type":"dataFile","url":"C:\\Users\\AishwaryaMANORE\\Documents\\AgilitestProjects\\QAFOOD\\target\\classes\\assets\\data\\data_construction_de_commande\\ParametreDeCommande.csv","parameters":[{"LiveraisonOuEmporter":"Livraison"},{"Temps":"19:00"}],"name":"subscripts.TesterAjouterMultipleArticleAvecMultipleToppingsSubscript","line":3}]]>
    </line>
    <line>
      <![CDATA[- Subscript -> {"called":"subscripts.TesterAjouterMultipleArticleAvecMultipleToppingsSubscript","iteration":"2/2","type":"dataFile","url":"C:\\Users\\AishwaryaMANORE\\Documents\\AgilitestProjects\\QAFOOD\\target\\classes\\assets\\data\\data_construction_de_commande\\TesterAjouterMultipleArticleAvecMultipleToppings.csv","parameters":[{"FoodItem":"Feuilletés poulet bacon"},{"Topping1":"Ketchup"},{"Topping2":""},{"Topping3":""}],"name":"construction_de_commande.TesterAjouterMultipleArticleAvecMultipleToppings","line":0}]]>
    </line>
    <line>
      <![CDATA[- Subscript -> {"condition":{"variable":{"iter":"2"},"compare":{"operator":"==","value":"1"},"continue":false},"name":"subscripts.TesterAjouterMultipleArticleAvecMultipleToppingsSubscript","line":3}]]>
    </line>
    <line>
      <![CDATA[- Subscript -> {"called":"subscripts.TesterLeParametreDeCommandeSubscript","iteration":"1/2","type":"dataFile","url":"C:\\Users\\AishwaryaMANORE\\Documents\\AgilitestProjects\\QAFOOD\\target\\classes\\assets\\data\\data_construction_de_commande\\TesterParametreDeCommand.csv","parameters":[{"Browser":"chrome"},{"EmailID":"aishwarya.manore@aldemia.fr"},{"Password":"Password"},{"FoodItem":"Feuilletés poulet bacon"},{"LiveraisonOuEmporter":"Livraison"},{"Temps":"19:30"},{"Toppings":"Sauce douce"}],"name":"construction_de_commande.TesterLeParametreDeCommand","line":0}]]>
    </line>
    <line>
      <![CDATA[- ELEMENT_NOT_FOUND INPUT[name="rpress_user_login",type="AishwaryaMANORE"] after 10407 ms]]>
    </line>
    <line>
      <![CDATA[- ActionText (subscripts.TesterLeParametreDeCommandeSubscript:3) (Executed action :ActionText)]]>
    </line>
    <line>
      <![CDATA[- ActionText (subscripts.TesterLeParametreDeCommandeSubscript:3) (Executed action :ActionText) after 0 ms]]>
    </line>
  </reporter-output>
  <suite started-at="2024-08-08T16:27:57 CEST" name="ConstructionDeCommandeSuite1" finished-at="2024-08-08T16:30:13 CEST" duration-ms="135966">
    <groups>
    </groups>
    <test started-at="2024-08-08T16:27:57 CEST" name="construction_de_commande.TesterAjouterMultipleArticleAvecMultipleToppings" finished-at="2024-08-08T16:29:43 CEST" duration-ms="105300">
      <class name="construction_de_commande.TesterAjouterMultipleArticleAvecMultipleToppings">
        <test-method is-config="true" signature="beforeClass(org.testng.ITestContext)[pri:0, instance:construction_de_commande.TesterAjouterMultipleArticleAvecMultipleToppings@48e1f6c7]" started-at="2024-08-08T16:27:57 CEST" name="beforeClass" test-instance-name="construction_de_commande.TesterAjouterMultipleArticleAvecMultipleToppings" finished-at="2024-08-08T16:27:57 CEST" duration-ms="22" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[org.testng.TestRunner@4eeb14e0]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeClass -->
        <test-method signature="TcTesterAjouterMultipleArticleAvecMultipleToppings()[pri:0, instance:construction_de_commande.TesterAjouterMultipleArticleAvecMultipleToppings@48e1f6c7]" started-at="2024-08-08T16:27:57 CEST" name="TcTesterAjouterMultipleArticleAvecMultipleToppings" test-instance-name="construction_de_commande.TesterAjouterMultipleArticleAvecMultipleToppings" finished-at="2024-08-08T16:29:05 CEST" duration-ms="67633" status="PASS">
          <reporter-output>
            <line>
              <![CDATA[- Subscript -> {"called":"subscripts.TesterAjouterMultipleArticleAvecMultipleToppingsSubscript","iteration":"1/2","type":"dataFile","url":"C:\\Users\\AishwaryaMANORE\\Documents\\AgilitestProjects\\QAFOOD\\target\\classes\\assets\\data\\data_construction_de_commande\\TesterAjouterMultipleArticleAvecMultipleToppings.csv","parameters":[{"FoodItem":"12 wings"},{"Topping1":"Ketchup"},{"Topping2":"Sauce douce"},{"Topping3":"Sauce piquante"}],"name":"construction_de_commande.TesterAjouterMultipleArticleAvecMultipleToppings","line":0}]]>
            </line>
            <line>
              <![CDATA[- Subscript -> {"condition":{"variable":{"iter":"1"},"compare":{"operator":"==","value":"1"},"continue":true},"called":"subscripts.ParametreDeCommande","iteration":"1/1","type":"dataFile","url":"C:\\Users\\AishwaryaMANORE\\Documents\\AgilitestProjects\\QAFOOD\\target\\classes\\assets\\data\\data_construction_de_commande\\ParametreDeCommande.csv","parameters":[{"LiveraisonOuEmporter":"Livraison"},{"Temps":"19:00"}],"name":"subscripts.TesterAjouterMultipleArticleAvecMultipleToppingsSubscript","line":3}]]>
            </line>
            <line>
              <![CDATA[- Subscript -> {"called":"subscripts.TesterAjouterMultipleArticleAvecMultipleToppingsSubscript","iteration":"2/2","type":"dataFile","url":"C:\\Users\\AishwaryaMANORE\\Documents\\AgilitestProjects\\QAFOOD\\target\\classes\\assets\\data\\data_construction_de_commande\\TesterAjouterMultipleArticleAvecMultipleToppings.csv","parameters":[{"FoodItem":"Feuilletés poulet bacon"},{"Topping1":"Ketchup"},{"Topping2":""},{"Topping3":""}],"name":"construction_de_commande.TesterAjouterMultipleArticleAvecMultipleToppings","line":0}]]>
            </line>
            <line>
              <![CDATA[- Subscript -> {"condition":{"variable":{"iter":"2"},"compare":{"operator":"==","value":"1"},"continue":false},"name":"subscripts.TesterAjouterMultipleArticleAvecMultipleToppingsSubscript","line":3}]]>
            </line>
          </reporter-output>
        </test-method> <!-- TcTesterAjouterMultipleArticleAvecMultipleToppings -->
        <test-method is-config="true" signature="cleanup()[pri:0, instance:construction_de_commande.TesterAjouterMultipleArticleAvecMultipleToppings@48e1f6c7]" started-at="2024-08-08T16:29:05 CEST" name="cleanup" test-instance-name="construction_de_commande.TesterAjouterMultipleArticleAvecMultipleToppings" finished-at="2024-08-08T16:29:43 CEST" duration-ms="37570" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- cleanup -->
        <test-method is-config="true" signature="afterClass(org.testng.ITestContext)[pri:0, instance:construction_de_commande.TesterAjouterMultipleArticleAvecMultipleToppings@48e1f6c7]" started-at="2024-08-08T16:29:43 CEST" name="afterClass" test-instance-name="construction_de_commande.TesterAjouterMultipleArticleAvecMultipleToppings" finished-at="2024-08-08T16:29:43 CEST" duration-ms="10" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[org.testng.TestRunner@4eeb14e0]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterClass -->
      </class> <!-- construction_de_commande.TesterAjouterMultipleArticleAvecMultipleToppings -->
    </test> <!-- construction_de_commande.TesterAjouterMultipleArticleAvecMultipleToppings -->
    <test started-at="2024-08-08T16:29:43 CEST" name="construction_de_commande.TesterLeParametreDeCommand" finished-at="2024-08-08T16:30:13 CEST" duration-ms="30576">
      <class name="construction_de_commande.TesterLeParametreDeCommand">
        <test-method is-config="true" signature="beforeSuite()[pri:0, instance:construction_de_commande.TesterLeParametreDeCommand@2f67b837]" started-at="2024-08-08T16:27:57 CEST" name="beforeSuite" test-instance-name="construction_de_commande.TesterLeParametreDeCommand" finished-at="2024-08-08T16:27:57 CEST" duration-ms="127" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeSuite -->
        <test-method is-config="true" signature="beforeClass(org.testng.ITestContext)[pri:0, instance:construction_de_commande.TesterLeParametreDeCommand@2f67b837]" started-at="2024-08-08T16:29:43 CEST" name="beforeClass" test-instance-name="construction_de_commande.TesterLeParametreDeCommand" finished-at="2024-08-08T16:29:43 CEST" duration-ms="9" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[org.testng.TestRunner@26ca12a2]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeClass -->
        <test-method signature="TcTesterLeParametreDeCommand()[pri:0, instance:construction_de_commande.TesterLeParametreDeCommand@2f67b837]" started-at="2024-08-08T16:29:43 CEST" name="TcTesterLeParametreDeCommand" test-instance-name="construction_de_commande.TesterLeParametreDeCommand" finished-at="2024-08-08T16:30:05 CEST" duration-ms="21796" status="FAIL">
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[ActionText (subscripts.TesterLeParametreDeCommandeSubscript:3) (Executed action :ActionText) after 0 ms]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: ActionText (subscripts.TesterLeParametreDeCommandeSubscript:3) (Executed action :ActionText) after 0 ms
at org.testng.Assert.fail(Assert.java:111)
at com.ats.executor.ActionTestScript.scriptFail(ActionTestScript.java:215)
at com.ats.executor.ActionTestScript.exec(ActionTestScript.java:1133)
at construction_de_commande.TesterLeParametreDeCommand.TcTesterLeParametreDeCommand(TesterLeParametreDeCommand.java:79)
at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103)
at java.base/java.lang.reflect.Method.invoke(Method.java:580)
at org.testng.internal.invokers.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:141)
at org.testng.internal.invokers.TestInvoker.invokeMethod(TestInvoker.java:686)
at org.testng.internal.invokers.TestInvoker.invokeTestMethod(TestInvoker.java:230)
at org.testng.internal.invokers.MethodRunner.runInSequence(MethodRunner.java:63)
at org.testng.internal.invokers.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:992)
at org.testng.internal.invokers.TestInvoker.invokeTestMethods(TestInvoker.java:203)
at org.testng.internal.invokers.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:154)
at org.testng.internal.invokers.TestMethodWorker.run(TestMethodWorker.java:134)
at java.base/java.util.ArrayList.forEach(ArrayList.java:1596)
at org.testng.TestRunner.privateRun(TestRunner.java:739)
at org.testng.TestRunner.run(TestRunner.java:614)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:421)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:413)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:373)
at org.testng.SuiteRunner.run(SuiteRunner.java:312)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:95)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1274)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1208)
at org.testng.TestNG.runSuites(TestNG.java:1112)
at org.testng.TestNG.run(TestNG.java:1079)
at org.testng.TestNG.privateMain(TestNG.java:1430)
at org.testng.TestNG.main(TestNG.java:1394)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
            <line>
              <![CDATA[- Subscript -> {"called":"subscripts.TesterLeParametreDeCommandeSubscript","iteration":"1/2","type":"dataFile","url":"C:\\Users\\AishwaryaMANORE\\Documents\\AgilitestProjects\\QAFOOD\\target\\classes\\assets\\data\\data_construction_de_commande\\TesterParametreDeCommand.csv","parameters":[{"Browser":"chrome"},{"EmailID":"aishwarya.manore@aldemia.fr"},{"Password":"Password"},{"FoodItem":"Feuilletés poulet bacon"},{"LiveraisonOuEmporter":"Livraison"},{"Temps":"19:30"},{"Toppings":"Sauce douce"}],"name":"construction_de_commande.TesterLeParametreDeCommand","line":0}]]>
            </line>
            <line>
              <![CDATA[- ELEMENT_NOT_FOUND INPUT[name="rpress_user_login",type="AishwaryaMANORE"] after 10407 ms]]>
            </line>
            <line>
              <![CDATA[- ActionText (subscripts.TesterLeParametreDeCommandeSubscript:3) (Executed action :ActionText)]]>
            </line>
            <line>
              <![CDATA[- ActionText (subscripts.TesterLeParametreDeCommandeSubscript:3) (Executed action :ActionText) after 0 ms]]>
            </line>
          </reporter-output>
        </test-method> <!-- TcTesterLeParametreDeCommand -->
        <test-method is-config="true" signature="cleanup()[pri:0, instance:construction_de_commande.TesterLeParametreDeCommand@2f67b837]" started-at="2024-08-08T16:30:05 CEST" name="cleanup" test-instance-name="construction_de_commande.TesterLeParametreDeCommand" finished-at="2024-08-08T16:30:13 CEST" duration-ms="8736" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- cleanup -->
        <test-method is-config="true" signature="afterClass(org.testng.ITestContext)[pri:0, instance:construction_de_commande.TesterLeParametreDeCommand@2f67b837]" started-at="2024-08-08T16:30:13 CEST" name="afterClass" test-instance-name="construction_de_commande.TesterLeParametreDeCommand" finished-at="2024-08-08T16:30:13 CEST" duration-ms="16" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[org.testng.TestRunner@26ca12a2]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterClass -->
        <test-method is-config="true" signature="afterSuite()[pri:0, instance:construction_de_commande.TesterLeParametreDeCommand@2f67b837]" started-at="2024-08-08T16:30:13 CEST" name="afterSuite" test-instance-name="construction_de_commande.TesterLeParametreDeCommand" finished-at="2024-08-08T16:30:13 CEST" duration-ms="21" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterSuite -->
      </class> <!-- construction_de_commande.TesterLeParametreDeCommand -->
    </test> <!-- construction_de_commande.TesterLeParametreDeCommand -->
  </suite> <!-- ConstructionDeCommandeSuite1 -->
</testng-results>
